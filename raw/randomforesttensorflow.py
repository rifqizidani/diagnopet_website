# -*- coding: utf-8 -*-
"""randomforesttensorflow.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1TXCE3t3tsycpUxQNerdPcw7F-AsgmLbM
"""

pip install tensorflow tensorflow_decision_forests

import pandas as pd
import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import tensorflow_decision_forests as tfdf
import math

from google.colab import drive
drive.mount('/content/drive')

train_df = pd.read_csv('/content/drive/MyDrive/capstone/datasetfeline.csv')
# test_df = pd.read_csv('/content/drive/MyDrive/capstone/testfeline.csv')
train_df.head()

label = "Penyakit"

classes = train_df[label].unique().tolist()
print(f"Label Classes: {classes}")

train_ds = tfdf.keras.pd_dataframe_to_tf_dataset(train_df, label="Penyakit;;;")
test_ds = tfdf.keras.pd_dataframe_to_tf_dataset(test_df, label="Penyakit;;;")

import numpy as np

def split_dataset(dataset, test_ratio=0.30):
  test_indices = np.random.rand(len(dataset)) < test_ratio
  return dataset[~test_indices], dataset[test_indices]

train_ds_pd, test_ds_pd = split_dataset(train_df)
print("{} examples in training, {} examples in testing.".format(len(train_ds_pd), len(test_ds_pd)))

train_ds = tfdf.keras.pd_dataframe_to_tf_dataset(train_ds_pd, label=label)
test_ds = tfdf.keras.pd_dataframe_to_tf_dataset(test_ds_pd, label=label)

model_1 = tfdf.keras.RandomForestModel(verbose=2)

model_1.fit(x=train_ds)

model_1.compile(metrics=["accuracy"])
evaluation = model_1.evaluate(test_ds, return_dict=True)
print()

for name, value in evaluation.items():
  print(f"{name}: {value:4f}")

